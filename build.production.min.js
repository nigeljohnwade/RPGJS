var Armors={armors:[{armorDamageModifier:1,armorName:"Plain Clothes"},{armorDamageModifier:1.1,armorName:"Cheap Leather"},{armorDamageModifier:1.2,armorName:"Sturdy Leather"},{armorDamageModifier:1.3,armorName:"Hardened Leather"},{armorDamageModifier:1.4,armorName:"Rigid Linen"}],getArmorDamageModifier:function(a){return this.armors[a].armorDamageModifier},getArmorName:function(a){return this.armors[a].armorName}},Combat={basicMeleeAttack:function(a){if("melee"===Weapons.weapons[a.weaponID].weaponStyle){for(var b,c,d=a.getMelee(),e=[],f=0;d>f;f++)b=100*Math.random()-a.attackChance,b>0&&e.push(b);return c=this.inflictDamage(e,a.getDamage()).damage,{damage:c,message:a.getWeapon()+" to attack and inflicts "+c}}return{message:a.name+" is not using a melee weapon"}},basicRangedAttack:function(a){if("ranged"===Weapons.weapons[a.weaponID].weaponStyle){for(var b,c=a.getRanged(),d=0,e=0;c>e;e++)100*Math.random()>a.attackChance&&d++;return b=this.inflictDamage(d,a.getDamage()).damage,{damage:b,message:a.getWeapon()+" to attack and inflicts "+b}}return{message:a.name+" is not using a ranged weapon"}},inflictDamage:function(a,b){var c=a.length,d=0;return d=c*b,{damage:d,message:c+" hits for "+d+" damage"}},receiveDamage:function(a,b){b-=a.getResilience();var c=Math.round(Math.max(b/a.woundsAt,0));return a.amendProperty("woundsInflicted",c),{wounds:c,message:a.name+" receives "+c+" wounds"}}};