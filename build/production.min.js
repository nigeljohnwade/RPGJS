function Inventory(){this.items={Weapons:[],Armors:[],Charms:[],Potions:[],Plot:[],Miscellany:[]},this.itemCount=0}function Weapons(){this.weapons=[{weaponDamageModifier:1,weaponName:"Bare Hands",weaponStyle:"melee"},{weaponDamageModifier:1.2,weaponName:"Cheap One Handed Blade",weaponStyle:"melee"},{weaponDamageModifier:1.2,weaponName:"Cheap One Handed Axe",weaponStyle:"melee"},{weaponDamageModifier:1.4,weaponName:"One Handed Blade",weaponStyle:"melee"},{weaponDamageModifier:1.4,weaponName:"One Handed Axe",weaponStyle:"melee"},{weaponDamageModifier:1,weaponName:"Improvised Thrown Missiles",weaponStyle:"ranged"},{weaponDamageModifier:1.2,weaponName:"Cheap Shortbow",weaponStyle:"ranged"},{weaponDamageModifier:1.3,weaponName:"Cheap Crossbow",weaponStyle:"ranged"},{weaponDamageModifier:1.4,weaponName:"Sturdy Longbow",weaponStyle:"ranged"},{weaponDamageModifier:1.5,weaponName:"Fine Recurve Composite Bow",weaponStyle:"ranged"}],this.getWeaponDamageModifier=function(a){return this.weapons[a].weaponDamageModifier},this.getWeaponName=function(a){return this.weapons[a].weaponName},this.getWeaponType=function(a){return this.weapons[a].weaponStyle}}function nonPlayerCharacter(a,b,c,d,e){this.stats=[],this.stats.melee=a,this.stats.ranged=b,this.stats.special=c,this.stats.toughness=d,this.wounds=3,this.woundsAt=3,this.woundsInflicted=0,this.status="healthy",this.attackChance=50,this.damage=1,this.defence=1,this.weaponID=0,this.armorID=0,this.inventory=new Inventory,this.name=e}function playerCharacter(a,b,c,d,e){this.stats=[],this.stats.melee=a,this.stats.ranged=b,this.stats.special=c,this.stats.toughness=d,this.wounds=3,this.woundsAt=3,this.woundsInflicted=0,this.status="healthy",this.attackChance=50,this.damage=1,this.defence=1,this.weaponID=null,this.armorID=null,this.inventory=new Inventory,this.name=e}function rpgConsole(a){this.content=[],this.writeCount=0,this.id=a,this.output=""}var Armors={armors:[{armorDamageModifier:1,armorName:"Plain Clothes"},{armorDamageModifier:1.1,armorName:"Cheap Leather"},{armorDamageModifier:1.2,armorName:"Sturdy Leather"},{armorDamageModifier:1.3,armorName:"Hardened Leather"},{armorDamageModifier:1.4,armorName:"Rigid Linen"}],getArmorDamageModifier:function(a){return this.armors[a].armorDamageModifier},getArmorName:function(a){return this.armors[a].armorName}},Combat={basicMeleeAttack:function(a){if("melee"===Weapons.weapons[a.weaponID].weaponStyle){for(var b,c,d=a.getMelee(),e=[],f=0;d>f;f++)b=100*Math.random()-a.attackChance,b>0&&e.push(b);return c=this.inflictDamage(e,a.getDamage()).damage,{damage:c,message:a.getWeapon()+" to attack and inflicts "+c}}return{message:a.name+" is not using a melee weapon"}},basicRangedAttack:function(a){if("ranged"===Weapons.weapons[a.weaponID].weaponStyle){for(var b,c=a.getRanged(),d=0,e=0;c>e;e++)100*Math.random()>a.attackChance&&d++;return b=this.inflictDamage(d,a.getDamage()).damage,{damage:b,message:a.getWeapon()+" to attack and inflicts "+b}}return{message:a.name+" is not using a ranged weapon"}},inflictDamage:function(a,b){var c=a.length,d=0;return d=c*b,{damage:d,message:c+" hits for "+d+" damage"}},receiveDamage:function(a,b){b-=a.getResilience();var c=Math.round(Math.max(b/a.woundsAt,0));return a.amendProperty("woundsInflicted",c),{wounds:c,message:a.name+" receives "+c+" wounds"}}};Inventory.prototype.getItem=function(a,b){return this[b].id},Inventory.prototype.getItemCount=function(){return this.itemCount},Inventory.prototype.addItem=function(a,b){this.itemCount=this.items[b].unshift(a)},Inventory.prototype.removeItem=function(a,b){this[b].splice(id,1),this.itemCount-=1},Weapons=new Weapons,nonPlayerCharacter.prototype.getMelee=function(){return this.stats.melee},nonPlayerCharacter.prototype.getRanged=function(){return this.stats.ranged},nonPlayerCharacter.prototype.getSpecial=function(){return this.stats.special},nonPlayerCharacter.prototype.getToughness=function(){return this.stats.toughness},nonPlayerCharacter.prototype.getDamage=function(){return this.getMelee()*this.damage},nonPlayerCharacter.prototype.getStatus=function(){return{status:this.status,message:this.name+" is "+this.status}},nonPlayerCharacter.prototype.getResilience=function(){return this.defence*this.stats.toughness},nonPlayerCharacter.prototype.getHealth=function(){return"Health is "+parseInt(Math.max(0,this.wounds-this.woundsInflicted))+"/"+this.wounds},nonPlayerCharacter.prototype.amendStat=function(a,b){this.stats[a]=this.stats[a]+b,this.updateStatus()},nonPlayerCharacter.prototype.setStat=function(a,b){this.stats[a]=b},nonPlayerCharacter.prototype.amendProperty=function(a,b){this[a]=this[a]+b,this.updateStatus()},nonPlayerCharacter.prototype.setProperty=function(a,b){this[a]=b},nonPlayerCharacter.prototype.updateStatus=function(){return this.woundsInflicted>this.wounds?this.die():this.woundsInflicted>0?this.injured():""},nonPlayerCharacter.prototype.die=function(){return this.status="dead",this.hideCard("opponent"),this.name+" is dead"},nonPlayerCharacter.prototype.injured=function(){return this.status="injured",this.name+" is injured"},nonPlayerCharacter.prototype.getWeapon=function(){return this.name+" is using "+Weapons.getWeaponName(this.weaponID)},nonPlayerCharacter.prototype.setWeapon=function(a){return this.weaponID=a,this.damage=this.damage*Weapons.getWeaponDamageModifier(a),this.name+" switches to "+Weapons.getWeaponName(this.weaponID)},nonPlayerCharacter.prototype.getArmor=function(){return this.name+" is wearing "+Armors.getArmorName(this.armorID)},nonPlayerCharacter.prototype.setArmor=function(a){return this.armorID=a,this.defence=this.defence*Armors.getArmorDamageModifier(a),this.name+" changes into "+Armors.getArmorName(this.armorID)},nonPlayerCharacter.prototype.showCard=function(a){var b=document.getElementById(a),c="";c+='<h1 class="nonPlayerCharacter">'+this.name+"</h1>";for(x in this.stats)c+='<p class="stat">'+x+': <span class="value"> '+this.stats[x]+"</span></p>";c+="<p>"+this.getWeapon()+"</p>",c+="<p>"+this.getArmor()+"</p>",c+="<p>"+this.getHealth()+"</p>",c+="<p>"+this.getStatus().message+"</p>",b.innerHTML=c},nonPlayerCharacter.prototype.hideCard=function(a){var b=document.getElementById(a),c="";b.innerHTML=c;var d=document.getElementById("basicMeleeAttack_badGuy");d.innerText="Back to map",d.onclick=backToMap},playerCharacter.prototype.getMelee=function(){return this.stats.melee},playerCharacter.prototype.getRanged=function(){return this.stats.ranged},playerCharacter.prototype.getSpecial=function(){return this.stats.special},playerCharacter.prototype.getToughness=function(){return this.stats.toughness},playerCharacter.prototype.getDamage=function(){return this.getMelee()*this.damage},playerCharacter.prototype.getStatus=function(){return{status:this.status,message:this.name+" is "+this.status}},playerCharacter.prototype.getResilience=function(){return this.defence*this.stats.toughness},playerCharacter.prototype.getHealth=function(){return"Health is "+parseInt(Math.max(0,this.wounds-this.woundsInflicted))+"/"+this.wounds},playerCharacter.prototype.amendStat=function(a,b){this.stats[a]=this.stats[a]+b,this.updateStatus()},playerCharacter.prototype.setStat=function(a,b){this.stats[a]=b},playerCharacter.prototype.amendProperty=function(a,b){this[a]=this[a]+b,this.updateStatus()},playerCharacter.prototype.setProperty=function(a,b){this[a]=b},playerCharacter.prototype.updateStatus=function(){return this.woundsInflicted>this.wounds?this.die():this.woundsInflicted>0?this.injured():""},playerCharacter.prototype.die=function(){return this.status="dead",this.name+" is dead"},playerCharacter.prototype.injured=function(){return this.status="injured",this.name+" is injured"},playerCharacter.prototype.getWeapon=function(){return this.name+" is using "+Weapons.getWeaponName(this.weaponID)},playerCharacter.prototype.setWeapon=function(a){for(var b=0;b<this.inventory.items.Weapons.length;b++)if(this.inventory.items.Weapons[b]===a)return this.weaponID=a,this.damage=this.damage*Weapons.getWeaponDamageModifier(a),this.name+" switches to "+Weapons.getWeaponName(this.weaponID)},playerCharacter.prototype.getAttackType=function(){return Weapons.getWeaponType(this.weaponID)},playerCharacter.prototype.getArmor=function(){return this.name+" is wearing "+Armors.getArmorName(this.armorID)},playerCharacter.prototype.setArmor=function(a){for(var b=0;b<this.inventory.items.Armors.length;b++)return(this.inventory.items.Armors[b]=a)?(this.armorID=a,this.defence=this.defence*Armors.getArmorDamageModifier(a),this.name+" changes into "+Armors.getArmorName(this.armorID)):!1},playerCharacter.prototype.showCard=function(a){div=document.getElementById(a),html="",html+='<h1 class="playerCharacter">'+this.name+"</h1>";for(x in this.stats)html+='<p class="stat">'+x+': <span class="value"> '+this.stats[x]+"</span></p>";html+="<p>"+this.getWeapon()+"</p>",html+="<p>"+this.getArmor()+"</p>",html+="<p>"+this.getHealth()+"</p>",html+="<p>"+this.getStatus().message+"</p>",div.innerHTML=html},rpgConsole.prototype.log=function(b,c){this.writeCount=this.content.unshift({theClass:b,theText:c});var d='<p class="{theClass}">{theText}</p>';for(a in this.content[0])d=d.replace("{"+a+"}",this.content[0][a]);this.output=d+this.output},rpgConsole.prototype.display=function(){document.getElementById(this.id).innerHTML=this.output};